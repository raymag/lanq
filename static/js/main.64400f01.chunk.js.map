{"version":3,"sources":["components/Game/index.js","data/EnglishQA/index.js","App.js","index.js"],"names":["Game","useState","currentMsg","setCurrentMSg","messages","setMessages","messagesEnd","setMessagesEnd","game","setGame","firstTime","setFirstTime","socket","setSocket","useEffect","undefined","socketIOClient","on","data","console","log","tempMessages","length","splice","emit","text","scrollIntoView","behavior","id","Object","keys","players","map","playerId","index","key","username","score","src","thumbnail","alt","msg","isCorrect","className","author","style","opacity","ref","e","type","autoFocus","onKeyDown","keyCode","target","value","replace","EnglishQA","answer","App","questionsList","title","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAKe,SAASA,IAAO,IAAD,EACUC,mBAAS,IADnB,mBACnBC,EADmB,KACPC,EADO,OAEMF,mBAAS,IAFf,mBAEnBG,EAFmB,KAETC,EAFS,OAGYJ,qBAHZ,mBAGnBK,EAHmB,KAGNC,EAHM,OAKFN,mBAAS,IALP,mBAKnBO,EALmB,KAKbC,EALa,OAMQR,oBAAS,GANjB,mBAMnBS,EANmB,KAMRC,EANQ,OAOEV,qBAPF,mBAOnBW,EAPmB,KAOXC,EAPW,KAoD1B,OAxCAC,qBAAU,WACFJ,EAwBAC,GAAa,QAvBCI,IAAXH,EACCC,EAAUG,IALN,sCAOJJ,EAAOK,GAAG,SAAS,SAAAC,GACfC,QAAQC,IAAIF,GACZT,EAAQS,MAEZN,EAAOK,GAAG,UAAU,SAAAC,GAChBT,EAAQS,MAEZN,EAAOK,GAAG,WAAW,SAAAC,GACjB,IAAIG,EAAY,sBAAOjB,GAAP,CAAiBc,IAC9Bd,EAASkB,QAjBb,IAkBKD,EAAaE,OAAO,EAAG,GAE3BlB,EAAYgB,MAEE,KAAfnB,IACCU,EAAOY,KAAK,UAAW,CAACC,KAAMvB,IAC9BC,EAAc,WAOPY,IAAhBT,GACCA,EAAYoB,eAAe,CAAEC,SAAU,aAE5C,CAACrB,EAAaF,EAAUM,EAAWR,EAAYU,IAU9C,yBAAKgB,GAAG,QACJ,yBAAKA,GAAG,gBAEgB,IAAhBpB,EAAKc,OACDO,OAAOC,KAAKtB,EAAKuB,SAASC,KAAI,SAACC,EAAUC,GAAX,OAC1B,0BAAMC,IAAKD,GAAO,2BAAI1B,EAAKuB,QAAQE,GAAUG,UAA7C,KAA6D5B,EAAKuB,QAAQE,GAAUI,MAApF,OAA8F,iCAEpG,IAGV,yBAAKT,GAAG,eACJ,yBAAKA,GAAG,aACa,IAAhBpB,EAAKc,OACN,oCACA,8BAAM,6CAA2B,6BACjC,yBAAKgB,IAAK9B,EAAK+B,UAAWC,IAAI,eACzB,IAGT,yBAAKZ,GAAG,aACJ,yBAAKA,GAAG,sBACHxB,EAAS4B,KAAK,SAACS,EAAKP,GAAN,OACXO,EAAIC,UACJ,0BAAMP,IAAKD,EAAOS,UAAU,kBAAiB,2BAAIF,EAAIG,OAAR,KAA7C,IAAmEH,EAAIhB,KAAK,8BAC3E,0BAAMU,IAAKD,GAAO,2BAAIO,EAAIG,OAAR,KAAlB,IAAwCH,EAAIhB,KAAK,iCAEtD,yBAAKoB,MAAO,CAAEC,QAAS,GAAKC,IAAK,SAACC,GAAD,OAAOzC,EAAeyC,KAAvD,QAEJ,yBAAKpB,GAAG,oBACJ,2BAAOqB,KAAK,OAAOC,WAAS,EAACC,UArCjD,SAAcH,GACO,KAAdA,EAAEI,SAAwD,KAAtCJ,EAAEK,OAAOC,MAAMC,QAAQ,MAAO,MACjDpD,EAAc6C,EAAEK,OAAOC,OACvBN,EAAEK,OAAOC,MAAQ,WCrD7B,IAmBeE,EAnBG,CACd,CACIjB,UAAW,kCACXkB,OAAQ,SAEZ,CACIlB,UAAW,mCACXkB,OAAQ,UAEZ,CACIlB,UAAW,oCACXkB,OAAQ,WAEZ,CACIlB,UAAW,uCACXkB,OAAQ,U,MCMDC,MAdf,WACE,OACE,yBAAKf,UAAU,OACb,4BAAQA,UAAU,cAChB,kCAAO,0BAAMA,UAAU,aAAhB,OAET,8BACE,kBAAC3C,EAAD,CAAM2D,cAAeH,KAEvB,uBAAGb,UAAU,iBAAiBiB,MAAM,yBAAyBC,KAAK,6BAAlE,mBCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.64400f01.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\n\r\nimport './styles.css';\r\n\r\nexport default function Game(){\r\n    const [currentMsg, setCurrentMSg] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [messagesEnd, setMessagesEnd] = useState();\r\n    \r\n    const [game, setGame] = useState([]);\r\n    const [firstTime, setFirstTime] = useState(true);\r\n    const [socket, setSocket] = useState();\r\n    \r\n    const msgMax = 15;\r\n    const apiPath = 'https://lanq-back.herokuapp.com/';\r\n    \r\n    useEffect(() => {\r\n        if(!firstTime){\r\n            if(socket === undefined){\r\n                setSocket(socketIOClient(apiPath));\r\n            }else{\r\n                socket.on('start', data => {\r\n                    console.log(data);\r\n                    setGame(data);\r\n                })\r\n                socket.on('update', data => {\r\n                    setGame(data);  \r\n                });\r\n                socket.on('message', data => {\r\n                    let tempMessages = [...messages, data];\r\n                    if(messages.length >= msgMax){\r\n                        tempMessages.splice(0, 1);\r\n                    }\r\n                    setMessages(tempMessages);\r\n                })\r\n                if(currentMsg !== ''){\r\n                    socket.emit('message', {text: currentMsg});\r\n                    setCurrentMSg('');\r\n                }\r\n            }\r\n        }else{\r\n            setFirstTime(false);\r\n        }\r\n        \r\n        if(messagesEnd !== undefined){\r\n            messagesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n    }, [messagesEnd, messages, firstTime, currentMsg, socket]);\r\n\r\n    function send(e){\r\n        if(e.keyCode === 13 && e.target.value.replace(/ /ig, '') !== ''){\r\n            setCurrentMSg(e.target.value);\r\n            e.target.value = '';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"game\">\r\n            <div id=\"game-sidebar\">\r\n                {\r\n                    game.length !== 0 ? \r\n                        Object.keys(game.players).map((playerId, index) => \r\n                            <span key={index}><b>{game.players[playerId].username}</b>: {game.players[playerId].score} pts<br/></span>\r\n                        )\r\n                    : ''\r\n                }\r\n            </div>\r\n            <div id=\"game-holder\">\r\n                <div id=\"game-show\">\r\n                    {game.length !== 0? \r\n                    <>\r\n                    <span><b>What is this?</b></span><br/>\r\n                    <img src={game.thumbnail} alt=\"thumbnail\" />\r\n                    </>: ''\r\n                    }\r\n                </div>\r\n                <div id=\"game-chat\">\r\n                    <div id=\"game-chat-messages\">\r\n                        {messages.map( (msg, index) => \r\n                            msg.isCorrect ?\r\n                            <span key={index} className=\"correct-answer\"><b>{msg.author}:</b> {msg.text}<br/></span>\r\n                            :<span key={index}><b>{msg.author}:</b> {msg.text}<br/></span>\r\n                        )}\r\n                        <div style={{ opacity: 0 }} ref={(e) => setMessagesEnd(e)}>END</div>\r\n                    </div> \r\n                    <div id=\"game-chat-writer\">\r\n                        <input type=\"text\" autoFocus onKeyDown={send}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","const EnglishQA = [\r\n    {\r\n        thumbnail: 'lanq/assets/EnglishQA/apple.png',\r\n        answer: 'apple'       \r\n    },\r\n    {\r\n        thumbnail: 'lanq/assets/EnglishQA/pencil.png',\r\n        answer: 'pencil'       \r\n    },\r\n    {\r\n        thumbnail: 'lanq/assets/EnglishQA/running.png',\r\n        answer: 'running'       \r\n    },\r\n    {\r\n        thumbnail: 'lanq/assets/EnglishQA/blood-drop.png',\r\n        answer: 'blood'       \r\n    },\r\n];\r\n\r\nexport default EnglishQA;","import React from 'react';\nimport Game from './components/Game';\n\nimport EnglishQA from './data/EnglishQA';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Lan<span className=\"highlight\">Q</span></h1>\n      </header>\n      <main>\n        <Game questionsList={EnglishQA} />\n      </main>\n      <a className=\"link-to-raymag\" title=\"Go to Raymag's Webiste\" href=\"https://raymag.github.io/\">Go to Raymag?</a>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}