{"version":3,"sources":["components/Game/index.js","data/EnglishQA/index.js","App.js","index.js"],"names":["Game","questionsList","useState","score","setScore","messages","setMessages","questions","currentIndex","setCurrentIndex","keys","availableIndexes","setAvailableIndexes","messagesEnd","setMessagesEnd","correctAnswer","e","tempMessages","length","splice","message","text","target","value","isCorrect","randIndex","Math","floor","random","tempAvailableIndexes","nextQuestion","useEffect","undefined","scrollIntoView","behavior","id","src","thumbnail","alt","map","msg","index","key","className","style","opacity","ref","type","autoFocus","onKeyDown","keyCode","replace","toLowerCase","answer","wrongAnswer","console","log","EnglishQA","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAIe,SAASA,EAAT,GAAoC,IAAD,IAApBC,qBAAoB,MAAJ,GAAI,IACpBC,mBAAS,GADW,mBACvCC,EADuC,KAChCC,EADgC,OAEdF,mBAAS,IAFK,mBAEvCG,EAFuC,KAE7BC,EAF6B,OAG1BJ,mBAASD,GAAtBM,EAHuC,sBAINL,qBAJM,mBAIvCM,EAJuC,KAIzBC,EAJyB,OAKEP,mBAAS,YAAID,EAAcS,SAL7B,mBAKvCC,EALuC,KAKrBC,EALqB,OAMRV,qBANQ,mBAMvCW,EANuC,KAM1BC,EAN0B,KAkC9C,SAASC,EAAcC,GACnB,IAAIC,EAAY,YAAOZ,GA3BZ,KA4BRA,EAASa,QACRD,EAAaE,OAAO,EAAG,GAE3B,IAAMC,EAAU,CAACC,KAAML,EAAEM,OAAOC,MAAOC,WAAW,GAClDlB,EAAY,GAAD,mBAAKW,GAAL,CAAmBG,KAC9BJ,EAAEM,OAAOC,MAAQ,GACjBnB,EAASD,EAAM,IAnBnB,WACmC,IAA5BQ,EAAiBO,QAChBN,EAAoB,YAAIL,EAAUG,SAEtC,IAAIe,EAAYC,KAAKC,MAAMD,KAAKE,SAAWjB,EAAiBO,QACxDW,EAAoB,YAAOlB,GAC/BkB,EAAqBV,OAAOM,EAAW,GACvCb,EAAoBiB,GACpBpB,EAAgBE,EAAiBc,IAYjCK,GA0BJ,OA3DAC,qBAAU,WACN,QAAoBC,IAAjBxB,GAA8BD,EAAUW,OAAS,EAAE,CAClD,IAAMO,EAAYC,KAAKC,MAAMD,KAAKE,SAAWrB,EAAUW,QACvDT,EAAgBgB,GAChB,IAAII,EAAoB,YAAOtB,EAAUG,QACzCmB,EAAqBV,OAAOM,EAAW,GACvCb,EAAoBiB,QAELG,IAAhBnB,GACCA,EAAYoB,eAAe,CAAEC,SAAU,aAE5C,CAAC1B,EAAcK,EAAaN,IAiD3B,yBAAK4B,GAAG,QACJ,yBAAKA,GAAG,gBACJ,8BAAM,kCAAN,KAAmBhC,EAAnB,UAEJ,yBAAKgC,GAAG,eACJ,yBAAKA,GAAG,kBACcH,IAAjBxB,EACD,oCACA,8BAAM,6CAA2B,6BACjC,yBAAK4B,IAAK7B,EAAUC,GAAc6B,UAAWC,IAAI,eAC5C,IAGT,yBAAKH,GAAG,aACJ,yBAAKA,GAAG,sBACH9B,EAASkC,KAAK,SAACC,EAAKC,GAAN,OACXD,EAAIhB,UACJ,0BAAMkB,IAAKD,EAAOE,UAAU,kBAAiB,mCAA7C,IAA0DH,EAAInB,KAAK,8BAClE,0BAAMqB,IAAKD,GAAO,mCAAlB,IAA+BD,EAAInB,KAAK,iCAE7C,yBAAKuB,MAAO,CAAEC,QAAS,GAAKC,IAAK,SAAC9B,GAAD,OAAOF,EAAeE,KAAvD,QAEJ,yBAAKmB,GAAG,oBACJ,2BAAOY,KAAK,OAAOC,WAAS,EAACC,UAtCjD,SAAcjC,GACO,KAAdA,EAAEkC,SAAwD,KAAtClC,EAAEM,OAAOC,MAAM4B,QAAQ,MAAO,MACzB,IAArB5C,EAAUW,OACNF,EAAEM,OAAOC,MAAM6B,gBAAmB7C,EAAUC,GAAc6C,OACzDtC,EAAcC,GAd9B,SAAqBA,GACjB,IAAIC,EAAY,YAAOZ,GAtCZ,KAuCRA,EAASa,QACRD,EAAaE,OAAO,EAAG,GAE3B,IAAMC,EAAU,CAACC,KAAML,EAAEM,OAAOC,MAAOC,WAAW,GAClDlB,EAAY,GAAD,mBAAKW,GAAL,CAAmBG,KAC9BJ,EAAEM,OAAOC,MAAQ,GASL+B,CAAYtC,GAGhBuC,QAAQC,IAAI,mDCpE5B,IAmBeC,EAnBG,CACd,CACIpB,UAAW,+BACXgB,OAAQ,SAEZ,CACIhB,UAAW,gCACXgB,OAAQ,UAEZ,CACIhB,UAAW,iCACXgB,OAAQ,WAEZ,CACIhB,UAAW,oCACXgB,OAAQ,U,MCKDK,MAbf,WACE,OACE,yBAAKf,UAAU,OACb,4BAAQA,UAAU,cAChB,kCAAO,0BAAMA,UAAU,aAAhB,OAET,8BACE,kBAAC3C,EAAD,CAAMC,cAAewD,OCT7BE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d266c72f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport './styles.css';\r\n\r\nexport default function Game({questionsList = []}){\r\n    const [score, setScore] = useState(0);\r\n    const [messages, setMessages] = useState([]);\r\n    const [questions] = useState(questionsList);\r\n    const [currentIndex, setCurrentIndex] = useState();\r\n    const [availableIndexes, setAvailableIndexes] = useState([...questionsList.keys()]);\r\n    const [messagesEnd, setMessagesEnd] = useState();\r\n    \r\n    const msgMax = 15;\r\n\r\n    useEffect(() => {\r\n        if(currentIndex === undefined && questions.length > 0){\r\n            const randIndex = Math.floor(Math.random() * questions.length);\r\n            setCurrentIndex(randIndex);\r\n            let tempAvailableIndexes = [...questions.keys()];\r\n            tempAvailableIndexes.splice(randIndex, 1);\r\n            setAvailableIndexes(tempAvailableIndexes);\r\n        }\r\n        if(messagesEnd !== undefined){\r\n            messagesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n    }, [currentIndex, messagesEnd, questions]);\r\n\r\n    function nextQuestion(){\r\n        if(availableIndexes.length === 0){\r\n            setAvailableIndexes([...questions.keys()]);\r\n        }\r\n        let randIndex = Math.floor(Math.random() * availableIndexes.length);\r\n        let tempAvailableIndexes = [...availableIndexes];\r\n        tempAvailableIndexes.splice(randIndex, 1);\r\n        setAvailableIndexes(tempAvailableIndexes);\r\n        setCurrentIndex(availableIndexes[randIndex]);\r\n    }\r\n\r\n    function correctAnswer(e){\r\n        let tempMessages = [...messages];\r\n        if(messages.length === msgMax){\r\n            tempMessages.splice(0, 1);\r\n        }\r\n        const message = {text: e.target.value, isCorrect: true};\r\n        setMessages([...tempMessages, message]);\r\n        e.target.value = '';\r\n        setScore(score+10);\r\n        nextQuestion();\r\n    }\r\n    function wrongAnswer(e){\r\n        let tempMessages = [...messages];\r\n        if(messages.length === msgMax){\r\n            tempMessages.splice(0, 1);\r\n        }\r\n        const message = {text: e.target.value, isCorrect: false};\r\n        setMessages([...tempMessages, message]);\r\n        e.target.value = '';\r\n    }\r\n\r\n    function send(e){\r\n        if(e.keyCode === 13 && e.target.value.replace(/ /ig, '') !== ''){\r\n            if(questions.length !== 0){\r\n                if(e.target.value.toLowerCase()  === questions[currentIndex].answer){\r\n                    correctAnswer(e);\r\n                }else{\r\n                    wrongAnswer(e);\r\n                }\r\n            }else{\r\n                console.log(\"[Game]: questionsList must not be null.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"game\">\r\n            <div id=\"game-sidebar\">\r\n                <span><b>YOU</b>: {score} pts </span>\r\n            </div>\r\n            <div id=\"game-holder\">\r\n                <div id=\"game-show\">\r\n                    {currentIndex !== undefined? \r\n                    <>\r\n                    <span><b>What is this?</b></span><br/>\r\n                    <img src={questions[currentIndex].thumbnail} alt=\"thumbnail\" />\r\n                    </>: ''\r\n                    }\r\n                </div>\r\n                <div id=\"game-chat\">\r\n                    <div id=\"game-chat-messages\">\r\n                        {messages.map( (msg, index) => \r\n                            msg.isCorrect ?\r\n                            <span key={index} className=\"correct-answer\"><b>YOU:</b> {msg.text}<br/></span>\r\n                            :<span key={index}><b>YOU:</b> {msg.text}<br/></span>\r\n                        )}\r\n                        <div style={{ opacity: 0 }} ref={(e) => setMessagesEnd(e)}>END</div>\r\n                    </div> \r\n                    <div id=\"game-chat-writer\">\r\n                        <input type=\"text\" autoFocus onKeyDown={send}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","const EnglishQA = [\r\n    {\r\n        thumbnail: './assets/EnglishQA/apple.png',\r\n        answer: 'apple'       \r\n    },\r\n    {\r\n        thumbnail: './assets/EnglishQA/pencil.png',\r\n        answer: 'pencil'       \r\n    },\r\n    {\r\n        thumbnail: './assets/EnglishQA/running.png',\r\n        answer: 'running'       \r\n    },\r\n    {\r\n        thumbnail: './assets/EnglishQA/blood-drop.png',\r\n        answer: 'blood'       \r\n    },\r\n];\r\n\r\nexport default EnglishQA;","import React from 'react';\nimport Game from './components/Game';\n\nimport EnglishQA from './data/EnglishQA';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Lan<span className=\"highlight\">Q</span></h1>\n      </header>\n      <main>\n        <Game questionsList={EnglishQA} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}